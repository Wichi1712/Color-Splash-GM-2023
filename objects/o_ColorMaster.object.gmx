<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimientos segun modeGame
//El movimiento vertical lo asigna el objeto control

//Horizontal
if( o_control.modeGame == 1)hspeed = random_range(-3,3);

//Horizontal 2
if( o_control.modeGame == 2)hspeed = random_range(-11,11);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Random de color
image_speed = 0.3;//Velocidad de fotogramas
//TRES FORMAS DIFERENTES DE DAR COLOR A UN OBJETO
//Primero hacemos un random
randomize();
randColor = irandom(4);
/*
OPCION 1
Usando el image_blend se le asigna un color
para cada array.
*/
//arColor[0] = c_black;
//arColor[1] = c_white;
//arColor[2] = c_blue;
//arColor[3] = c_yellow;
//arColor[4] = c_red;
//image_blend = arColor[randColor];
/*-------------------------------------------------------------------
OPCION 2
Usando una imagen o sprite por cada array
y asignando esa imagen en el sprite_index.
*/
sprColor[0] = spr_bubbleBlack;
sprColor[1] = spr_bubbleWhite;
sprColor[2] = spr_bubbleBlue;
sprColor[3] = spr_bubbleYellow;
sprColor[4] = spr_bubbleRed;
sprite_index = sprColor[randColor];
/*-------------------------------------------------------------------------
OPCION 3
Otra opcion para generar colores aleatorios
es usando make_color_rgb, en un rango entre 0 y 255
por cada color,azul, amarillo y rojo.
En este caso he usado choose para que escoja solo entre 0 รณ 255
ya que solo deseaba generar colores enteros y no tonalidades medias.

Para tonalidades mas variadas usaria random(255) por cada color asi:
image_blend = make_color_rgb( random(255),random(255),random(255),);
*/
//image_blend = make_color_rgb( choose(0,255),choose(0,255),choose(0,255));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destruccion de color y reduccion de vidas de player
image_speed=0.1;
//scr_destruccion();
//Cada vez que la burbuja llega al borde inferior.
if( y &gt; room_height){
    instance_destroy();//destruimos la misma instancia
    //audio_play_sound(dano,20,0);//creamos sonido
    o_control.vidas--;//Restamos vidas
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Incrementa score, destruye instancia y damos color a splash
if(randColor == 0){global.scoreBlack++;}else
if(randColor == 1){global.scoreWhite++;}else
if(randColor == 2){global.scoreBlue++;}else
if(randColor == 3){global.scoreYellow++;}
else{global.scoreRed++;}

/*Le asignamos el mismo color de la burbuja de color
a la instancia splash*/
instance_create(x,y,o_SplashMaster);//Creamos el objeto splash

/*Este codigo funciona con la opcion 1*/
//o_SplashMaster.image_blend = arColor[randColor];//asignacion de color

/*Para la opcion 2 es el mismo objeto splash el que asigna
la imagen mediante el randColor*/

//Destruimos instancia
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_solid">
      <action>
        <libid>1</libid>
        <id>113</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_reverse_xdir</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
